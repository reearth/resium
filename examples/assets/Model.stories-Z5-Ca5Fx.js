import{j as r}from"./jsx-runtime-BjG_zV1W.js";import{a as x}from"./index-CjDrOnrV.js";import{e as h}from"./storybook-lrzrXzR7.js";import{c as M,i as D}from"./component-P3MpLVno.js";import{V as R}from"./Viewer-DzJqVukv.js";import{C as P}from"./CameraFlyTo-qmg1bvy4.js";import"./v4-Dz_GI0CC.js";import"./index-yIsmwZOr.js";import"./CameraOperation-CDUpAgP9.js";const E=["backFaceCulling","clampAnimations","clippingPlanes","color","colorBlendAmount","colorBlendMode","customShader","debugShowBoundingVolume","debugWireframe","distanceDisplayCondition","featureIdLabel","heightReference","id","imageBasedLighting","instanceFeatureIdLabel","lightColor","maximumScale","minimumPixelSize","modelMatrix","outlineColor","scale","shadows","show","showCreditsOnScreen","showOutline","silhouetteColor","silhouetteSize","splitDirection","style"],j=["allowPicking","asynchronous","basePath","credit","enableDebugWireframe","gltf","heightReference","incrementallyLoadTextures","scene","releaseGltfJson","cull","opaquePass","upAxis","forwardAxis","content","scene","enableShowOutline","projectTo2D","classificationType","errorEvent","readyEvent","texturesReadyEvent","gltfCallback","enablePick"],A=["onReady","onError","url"],F=M({name:"Model",async create(e,{scene:i,url:c,colorBlendMode:S,...o}){var u;if(!e.scene||!e.primitiveCollection||!c)return;const t=c;let n;D(t)?n=await t:n=t;let m;try{m=await Cesium.Model.fromGltfAsync({...o,url:n,colorBlendMode:S,scene:i||e.scene})}catch(b){(u=o.onError)==null||u.call(o,b);return}return e.primitiveCollection.add(m),m},destroy(e,i){i.primitiveCollection&&!i.primitiveCollection.isDestroyed()&&i.primitiveCollection.remove(e),e.isDestroyed()||e.destroy()},cesiumEventProps:{onReady:"readyEvent"},cesiumProps:E,cesiumReadonlyProps:j,otherProps:A,useCommonEvent:!0}),l=F,T=Cesium.Cartesian3.fromDegrees(-95,40,2e5),v=Cesium.Cartesian3.fromDegrees(-95,40,21e4),w=Cesium.Transforms.eastNorthUpToFixedFrame(T),I={title:"Model",component:l},s={render:e=>r.jsxs(R,{full:!0,children:[r.jsx(P,{destination:v,duration:0}),r.jsx(l,{...e,url:"Cesium_Air.glb",modelMatrix:w,minimumPixelSize:128,maximumScale:2e4,onReady:x("onReady"),...h})]})},a={render:e=>r.jsxs(R,{full:!0,children:[r.jsx(P,{destination:v,duration:0}),r.jsx(l,{...e,url:Promise.resolve(new Cesium.Resource("Cesium_Air.glb")),modelMatrix:w,minimumPixelSize:128,maximumScale:2e4,onReady:x("onReady"),...h})]})};var d,p,f;s.parameters={...s.parameters,docs:{...(d=s.parameters)==null?void 0:d.docs,source:{originalSource:`{
  render: args => <Viewer full>
      <CameraFlyTo destination={cameraDest} duration={0} />
      <Model {...args} url="Cesium_Air.glb" modelMatrix={modelMatrix} minimumPixelSize={128} maximumScale={20000} onReady={action("onReady")} {...events} />
    </Viewer>
}`,...(f=(p=s.parameters)==null?void 0:p.docs)==null?void 0:f.source}}};var y,C,g;a.parameters={...a.parameters,docs:{...(y=a.parameters)==null?void 0:y.docs,source:{originalSource:`{
  render: args => <Viewer full>
      <CameraFlyTo destination={cameraDest} duration={0} />
      <Model {...args} url={Promise.resolve(new Resource("Cesium_Air.glb"))} modelMatrix={modelMatrix} minimumPixelSize={128} maximumScale={20000} onReady={action("onReady")} {...events} />
    </Viewer>
}`,...(g=(C=a.parameters)==null?void 0:C.docs)==null?void 0:g.source}}};const W=["Basic","FromPromiseResource"];export{s as Basic,a as FromPromiseResource,W as __namedExportsOrder,I as default};
