import{j as n}from"./jsx-runtime-BjG_zV1W.js";import{r as a}from"./index-yIsmwZOr.js";import{c as y,u as x}from"./component-P3MpLVno.js";import{V as P}from"./Viewer-DzJqVukv.js";import{C as g}from"./CameraFlyTo-qmg1bvy4.js";import"./CameraOperation-CDUpAgP9.js";const v=["show","emitter","modelMatrix","emitterModelMatrix","emissionRate","bursts","loop","startScale","endScale","startColor","endColor","image","imageSize","minimumImageSize","maximumImageSize","speed","minimumSpeed","maximumSpeed","lifetime","particleLife","minimumParticleLife","maximumParticleLife","mass","minimumMass","maximumMass","sizeInMeters"],M={onComplete:"complete",onUpdate:"updateCallback"},z=y({name:"ParticleSystem",create(i,e){if(!i.primitiveCollection)return;const t=new Cesium.ParticleSystem({...e,updateCallback:e.onUpdate});return i.primitiveCollection.add(t),t},update(i,e,t){e.onUpdate!==t.onUpdate&&(i.updateCallback=e.onUpdate)},destroy(i,e){e.primitiveCollection&&!e.primitiveCollection.isDestroyed()&&e.primitiveCollection.remove(i)},cesiumProps:v,cesiumEventProps:M}),p=z,R={title:"ParticleSystem",component:p},C=new Cesium.Cartesian3(277096.634865404,5647834481964232e-9,2.9855637039122293e6),c=1,s=1e5,I=()=>{const i=x().scene,e=a.useRef(new Cesium.Cartesian3),t=i?i.drawingBufferWidth/100:0,S=a.useMemo(()=>new Cesium.Cartesian2(t,t),[t]),w=a.useMemo(()=>new Cesium.Cartesian2(t*2,t*2),[t]),f=a.useMemo(()=>new Cesium.SphereEmitter(s),[]),h=a.useCallback(r=>{if(!i)return;e.current=Cesium.Cartesian3.normalize(r.position,e.current),Cesium.Cartesian3.multiplyByScalar(e.current,Cesium.Math.randomBetween(-30,-300),e.current),r.velocity=Cesium.Cartesian3.add(r.velocity,e.current,r.velocity);const m=Cesium.Cartesian3.distance(i.camera.position,r.position);m>s?r.endColor.alpha=0:r.endColor.alpha=c/(m/s+.1)},[i]);return n.jsx(p,{modelMatrix:Cesium.Matrix4.fromTranslation(C),minimumSpeed:-1,maximumSpeed:0,lifetime:15,emitter:f,startScale:.5,endScale:1,image:"circular_particle.png",emissionRate:7e3,startColor:Cesium.Color.WHITE.withAlpha(0),endColor:Cesium.Color.WHITE.withAlpha(c),minimumImageSize:S,maximumImageSize:w,onUpdate:h})},o={render:()=>n.jsxs(P,{full:!0,shouldAnimate:!0,terrainProvider:Cesium.createWorldTerrainAsync({}),children:[n.jsx(g,{duration:0,destination:C,orientation:{heading:4.731089976107251,pitch:-.32003481981370063}}),n.jsx(I,{})]})};var l,u,d;o.parameters={...o.parameters,docs:{...(l=o.parameters)==null?void 0:l.docs,source:{originalSource:`{
  render: () => <Viewer full shouldAnimate terrainProvider={createWorldTerrainAsync({})}>
      <CameraFlyTo duration={0} destination={pos} orientation={{
      heading: 4.731089976107251,
      pitch: -0.32003481981370063
    }} />
      <SnowParticle />
    </Viewer>
}`,...(d=(u=o.parameters)==null?void 0:u.docs)==null?void 0:d.source}}};const W=["Snow"];export{o as Snow,W as __namedExportsOrder,R as default};
