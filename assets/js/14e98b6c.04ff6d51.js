"use strict";(globalThis.webpackChunkresium_docs=globalThis.webpackChunkresium_docs||[]).push([[69],{5144:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"migration","title":"Migration Guide","description":"v1.14","source":"@site/docs/05-migration.md","sourceDirName":".","slug":"/migration","permalink":"/migration","draft":false,"unlisted":false,"editUrl":"https://github.com/reearth/resium/edit/main/docs/docs/05-migration.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"migration","title":"Migration Guide"},"sidebar":"docs","previous":{"title":"Advanced","permalink":"/advanced"},"next":{"title":"Contribution","permalink":"/contribution"}}');var r=i(4848),o=i(8453);const s={id:"migration",title:"Migration Guide"},d="Migration Guide",c={},a=[{value:"v1.14",id:"v114",level:2},{value:"Event handlers no longer receive an entity and primitive directly",id:"event-handlers-no-longer-receive-an-entity-and-primitive-directly",level:3},{value:"EntityStaticDescription component is deprecated",id:"entitystaticdescription-component-is-deprecated",level:3},{value:"v1.12",id:"v112",level:2},{value:"Official type definition is supported!",id:"official-type-definition-is-supported",level:3},{value:"Some component properties are fixed",id:"some-component-properties-are-fixed",level:3},{value:"<code>useCesium</code> hook is no longer needed a type argument",id:"usecesium-hook-is-no-longer-needed-a-type-argument",level:3},{value:"v1.9",id:"v19",level:2},{value:"v1.0",id:"v10",level:2},{value:"Resium are fully reimplemented",id:"resium-are-fully-reimplemented",level:3},{value:"Changed: Entity description",id:"changed-entity-description",level:3},{value:"Decrepated: PropType",id:"decrepated-proptype",level:3},{value:"Renamed / Decrepated: properties",id:"renamed--decrepated-properties",level:3},{value:"<code>url</code> or <code>czml</code> prop of Kml/Czml/GeoJsonDataSource",id:"url-or-czml-prop-of-kmlczmlgeojsondatasource",level:4},{value:"<code>onMount</code>, <code>onUpdate</code> and <code>onUnmount</code> prop",id:"onmount-onupdate-and-onunmount-prop",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"migration-guide",children:"Migration Guide"})}),"\n",(0,r.jsx)(n.h2,{id:"v114",children:"v1.14"}),"\n",(0,r.jsx)(n.h3,{id:"event-handlers-no-longer-receive-an-entity-and-primitive-directly",children:"Event handlers no longer receive an entity and primitive directly"}),"\n",(0,r.jsx)(n.p,{children:"Until now, you could receive the picked entities and primitives directly in the event handler of the component."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Viewer\n  onClick={(e, target) => {\n    if (target instanceof Entity) {\n      // target is a entity!\n    }\n  }}\n/>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This behavior has been changed so that the value returned by ",(0,r.jsx)(n.code,{children:"scene.pick"})," method is passed directly to the event handler:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<Viewer\n  onClick={(e, target) => {\n    if (target?.id instanceof Entity) {\n      // target.id is an Entity!\n    } else if (target?.primitive instanceof Primitive) {\n      // target.id is a Primitive!\n    } else if (target instanceof Cesium3DTileFeature) {\n      // target is a Cesium3DTileFeature!\n    }\n  }}\n/>\n"})}),"\n",(0,r.jsx)(n.p,{children:"This change will apply to all components that have event properties."}),"\n",(0,r.jsx)(n.h3,{id:"entitystaticdescription-component-is-deprecated",children:"EntityStaticDescription component is deprecated"}),"\n",(0,r.jsx)(n.p,{children:"EntityStaticDescription component has been remvoed from Resium, because it did not mesh well with the build tools."}),"\n",(0,r.jsxs)(n.p,{children:["Use EntityDescription component or ",(0,r.jsx)(n.code,{children:"description"})," prop of Entity component instead:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<>\n  <EntityDescritpion>\n    <p>Hello</p>\n  </EntityDescription>\n  <Entity description="<p>hello</p>">\n</>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"v112",children:"v1.12"}),"\n",(0,r.jsx)(n.p,{children:"Changes related to TypeScript type definitions are main, but some component properties are changed also."}),"\n",(0,r.jsx)(n.h3,{id:"official-type-definition-is-supported",children:"Official type definition is supported!"}),"\n",(0,r.jsxs)(n.p,{children:["Now Cesium's official TypeScript type definitions since Cesium v1.70 is used, so ",(0,r.jsx)(n.code,{children:"@types/cesium"})," is no longer used. You can uninstall it."]}),"\n",(0,r.jsx)(n.h3,{id:"some-component-properties-are-fixed",children:"Some component properties are fixed"}),"\n",(0,r.jsx)(n.p,{children:"Some components' properties are mistakenly typed and they are fixed, but that includes some breaking changes. Some properties are changed Cesium prop type: e.g. Cesium props -> Cesium read-only props."}),"\n",(0,r.jsxs)(n.h3,{id:"usecesium-hook-is-no-longer-needed-a-type-argument",children:[(0,r.jsx)(n.code,{children:"useCesium"})," hook is no longer needed a type argument"]}),"\n",(0,r.jsx)(n.p,{children:"You can still add a type argument, but you can also omit it."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { Viewer } from "cesium";\nimport { useCesium } from "resium";\n\n// before\nconst { viewer } = useCesium<{ viewer?: Viewer }>();\n\n// after\nconst { viewer } = useCesium();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"v19",children:"v1.9"}),"\n",(0,r.jsx)(n.p,{children:"Resium are fully reimplemented with React Hooks. There are possibilities that the behavior has changed in edge cases."}),"\n",(0,r.jsxs)(n.p,{children:["And some properties and types are changed, removed, or renamed. For details, please check ",(0,r.jsx)(n.a,{href:"https://github.com/reearth/resium/tree/main/CHANGELOG.md",children:"changelog"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"v10",children:"v1.0"}),"\n",(0,r.jsx)(n.h3,{id:"resium-are-fully-reimplemented",children:"Resium are fully reimplemented"}),"\n",(0,r.jsx)(n.p,{children:"New component lifecycle and new React Context API in React v16.3 are supported."}),"\n",(0,r.jsx)(n.p,{children:"There are possibilities that the behavior has changed in edge cases."}),"\n",(0,r.jsx)(n.h3,{id:"changed-entity-description",children:"Changed: Entity description"}),"\n",(0,r.jsxs)(n.p,{children:["Children of Entity component are no longer rendered as description. Use ",(0,r.jsx)(n.code,{children:"EntityDescription"})," component instead."]}),"\n",(0,r.jsx)(n.p,{children:"Before:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity } from "resium";\n\nconst Component = () => (\n  <Viewer>\n    <Entity>\n      <h1>Hello, world</h1>\n      <p>This is test</p>\n    </Entity>\n  </Viewer>\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:"After:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity, EntityDescription } from "resium";\n\nconst Component = () => (\n  <Viewer>\n    <Entity>\n      <EntityDescription>\n        <h1>Hello, world</h1>\n        <p>This is test</p>\n      </EntityDescription>\n    </Entity>\n  </Viewer>\n);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now only ",(0,r.jsx)(n.code,{children:"EntityDescription"})," depends on ",(0,r.jsx)(n.code,{children:"react-dom"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"decrepated-proptype",children:"Decrepated: PropType"}),"\n",(0,r.jsx)(n.p,{children:"PropType is no longer used. TypeScript is recommended."}),"\n",(0,r.jsx)(n.h3,{id:"renamed--decrepated-properties",children:"Renamed / Decrepated: properties"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://github.com/reearth/resium/tree/main/CHANGELOG.md",children:"CHANGELOG"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"url-or-czml-prop-of-kmlczmlgeojsondatasource",children:[(0,r.jsx)(n.code,{children:"url"})," or ",(0,r.jsx)(n.code,{children:"czml"})," prop of Kml/Czml/GeoJsonDataSource"]}),"\n",(0,r.jsxs)(n.p,{children:["They have been integrated to ",(0,r.jsx)(n.code,{children:"data"})," prop. Now ",(0,r.jsx)(n.code,{children:"data"})," prop accepts URL string, Cesium.Resouce, and data object."]}),"\n",(0,r.jsxs)(n.h4,{id:"onmount-onupdate-and-onunmount-prop",children:[(0,r.jsx)(n.code,{children:"onMount"}),", ",(0,r.jsx)(n.code,{children:"onUpdate"})," and ",(0,r.jsx)(n.code,{children:"onUnmount"})," prop"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"onMount"}),", ",(0,r.jsx)(n.code,{children:"onUpdate"})," and ",(0,r.jsx)(n.code,{children:"onUnmount"})," prop have been deprecated as they violate React's custom. Use ",(0,r.jsx)(n.code,{children:"ref"})," prop instead."]}),"\n",(0,r.jsx)(n.p,{children:"Before:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const Component = () => (\n  <Viewer\n    onMount={(viewer) => {\n      // some code\n    }}\n  />\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"After:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"class Component extends React.PureComponent {\n  ref = React.createRef();\n\n  componentDidMount() {\n    if (ref.current) {\n      const viewer = ref.current.cesiumElement;\n      // some code\n    }\n  }\n\n  render() {\n    return (\n      <Viewer ref={this.ref} />\n    );\n  }\n);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(6540);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);