"use strict";(globalThis.webpackChunkresium_docs=globalThis.webpackChunkresium_docs||[]).push([[3108],{1877:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting_started","title":"Getting Started","description":"After installation, let\'s create a hello world application.","source":"@site/docs/02-getting_started.md","sourceDirName":".","slug":"/getting_started","permalink":"/getting_started","draft":false,"unlisted":false,"editUrl":"https://github.com/reearth/resium/edit/main/docs/docs/02-getting_started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"getting_started","title":"Getting Started"},"sidebar":"docs","previous":{"title":"Installation","permalink":"/installation"},"next":{"title":"Guide","permalink":"/guide"}}');var s=i(4848),r=i(8453);const o={id:"getting_started",title:"Getting Started"},a="Getting Started",l={},c=[{value:"The simplest Resium application",id:"the-simplest-resium-application",level:2},{value:"Displaying an entity",id:"displaying-an-entity",level:2},{value:"Displaying description of an entity",id:"displaying-description-of-an-entity",level:2},{value:"Adding Cesium world terrain",id:"adding-cesium-world-terrain",level:2},{value:"Loading your own data",id:"loading-your-own-data",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsxs)(n.p,{children:["After ",(0,s.jsx)(n.a,{href:"/installation",children:"installation"}),", let's create a hello world application."]}),"\n",(0,s.jsx)(n.p,{children:"You can import all resium components as following."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer } from "resium";\n'})}),"\n",(0,s.jsx)(n.h2,{id:"the-simplest-resium-application",children:"The simplest Resium application"}),"\n",(0,s.jsx)(n.p,{children:"The simplest resium application is as following."}),"\n",(0,s.jsxs)(n.p,{children:["Just as Cesium's root object is ",(0,s.jsx)(n.code,{children:"Viewer"}),", ",(0,s.jsx)(n.code,{children:"<Viewer>"})," is also a root component in resium."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"app.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer } from "resium";\n\nfunction App() {\n  return <Viewer />;\n}\n\nexport default App;\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"index.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import ReactDOM from "react-dom/client";\nimport App from "./app";\n\nconst root = ReactDOM.createRoot(document.getElementById("wrapper"));\nroot.render(<App />);\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is almost equivalent to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const viewer = new Cesium.Viewer("wrapper");\n'})}),"\n",(0,s.jsx)(n.p,{children:"But the viewer is displayed small because it does not have its own size."}),"\n",(0,s.jsxs)(n.p,{children:["The easiest solution is using ",(0,s.jsx)(n.code,{children:"full"})," prop. It makes the viewer displayed on the full screen."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Viewer full />\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is equivalent to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Viewer\n  style={{\n    position: "absolute",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  }}\n/>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to customize the container styles, you can use ",(0,s.jsx)(n.code,{children:"style"})," and ",(0,s.jsx)(n.code,{children:"className"})," prop. They are applied to ",(0,s.jsx)(n.code,{children:"div"})," element rendered by a Viewer component."]}),"\n",(0,s.jsx)(n.p,{children:"It means that CSS-in-JS libraries (styled-components, emotion...) are available on a Viewer component."}),"\n",(0,s.jsx)(n.p,{children:"Hereafter, we omit the code such as HMR in example code."}),"\n",(0,s.jsx)(n.h2,{id:"displaying-an-entity",children:"Displaying an entity"}),"\n",(0,s.jsx)(n.p,{children:"Next, let's display an entity on Cesium. Entity component is available in resium."}),"\n",(0,s.jsx)(n.p,{children:"Entity has many way to visualize geograohical data. Here let's try to use PointGraphics."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\nconst pointGraphics = { pixelSize: 10 };\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} point={pointGraphics} />\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is equivalent to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const viewer = new Cesium.Viewer("wrapper");\nconst entity = new Cesium.Entity({\n  position: Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100),\n  point: { pixelSize: 10 },\n});\nviewer.entities.add(entity);\n'})}),"\n",(0,s.jsx)(n.p,{children:"If HMR is enabled, it fully works in resium, so entity is updated without reloading the page when the source code is changed!"}),"\n",(0,s.jsxs)(n.p,{children:["The following is also the same. It uses ",(0,s.jsx)(n.code,{children:"PointGraphics"})," component. This enables updating graphic properties with minimal cost."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity, PointGraphics } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position}>\n        <PointGraphics pixelSize={10} />\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"displaying-description-of-an-entity",children:"Displaying description of an entity"}),"\n",(0,s.jsx)(n.p,{children:"The following example is displaying a simple name and description of the entity."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity, PointGraphics } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} name="Tokyo" description="Hello, world.">\n        <PointGraphics pixelSize={10} />\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to render rich description, ",(0,s.jsx)(n.code,{children:"EntityDescription"})," component is the best. It enables using JSX in the description of entities!"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity, PointGraphics, EntityDescription } from "resium";\nimport { Cartesian3 } from "cesium";\n\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full>\n      <Entity position={position} name="Tokyo">\n        <PointGraphics pixelSize={10} />\n        <EntityDescription>\n          <h1>Hello, world.</h1>\n          <p>JSX is available here!</p>\n        </EntityDescription>\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"adding-cesium-world-terrain",children:"Adding Cesium world terrain"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"terrainProvider"})," prop of ",(0,s.jsx)(n.code,{children:"Viewer"})," is available."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Entity, PointGraphics, EntityDescription } from "resium";\nimport { Cartesian3, createWorldTerrain } from "cesium";\n\nconst terrainProvider = createWorldTerrain();\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\n\nfunction App() {\n  return (\n    <Viewer full terrainProvider={terrainProvider}>\n      <Entity position={position} name="Tokyo">\n        <PointGraphics pixelSize={10} />\n        <EntityDescription>\n          <h1>Hello, world.</h1>\n          <p>JSX is available here!</p>\n        </EntityDescription>\n      </Entity>\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"loading-your-own-data",children:"Loading your own data"}),"\n",(0,s.jsx)(n.p,{children:"Cesium and resium support KML, GeoJSON, TopoJSON, and CZML. Let's load and display your own data!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, GeoJsonDataSource, KmlDataSource } from "resium";\n\nconst data = {\n  type: "Feature",\n  properties: {\n    name: "Coors Field",\n    amenity: "Baseball Stadium",\n    popupContent: "This is where the Rockies play!",\n  },\n  geometry: {\n    type: "Point",\n    coordinates: [-104.99404, 39.75621],\n  },\n};\n\nfunction App() {\n  return (\n    <Viewer full>\n      <GeoJsonDataSource data={"your_geo_json.geojson"} />\n      <KmlDataSource data={"your_geo_json.kml"} />\n      <GeoJsonDataSource data={data} />\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.p,{children:"3D tiles is also available."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { Viewer, Cesium3DTileset } from "resium";\nimport { IonResource } from "cesium";\n\nfunction App() {\n  let viewer; // This will be raw Cesium\'s Viewer object.\n\n  const handleReady = (tileset) => {\n    if (viewer) {\n      viewer.zoomTo(tileset);\n    }\n  };\n\n  return (\n    <Viewer\n      full\n      ref={(e) => {\n        viewer = e && e.cesiumElement;\n      }}\n    >\n      <Cesium3DTileset\n        url={IonResource.fromAssetId(5714)}\n        onReady={handleReady}\n      />\n    </Viewer>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/guide",children:"Guide"})}),"\n",(0,s.jsx)(n.li,{children:"Components: see menu"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://resium.reearth.io/examples/",children:"Examples"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cesium.com/learn/cesiumjs/ref-doc/",children:"Cesium Documentation"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);